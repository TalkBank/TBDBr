% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_functions.R
\name{getCQL}
\alias{getCQL}
\title{Query CQL}
\usage{
getCQL(
  cqlArr = NULL,
  corpusName = NULL,
  corpora = NULL,
  lang = NULL,
  media = NULL,
  age = NULL,
  gender = NULL,
  designType = NULL,
  activityType = NULL,
  groupType = NULL,
  auth = FALSE
)
}
\arguments{
\item{cqlArr}{Query by grammatical pattern.
For example, to search for all utterances where a speaker says "go" once followed by adverb occuring one or more times: cqlArr=list(list(type="word", item="go", freq="once"), list(type="pos", item="adv", freq="onePlus")).
Legal values for type are: "word" to match exact word, "lemma" to match all forms of a word, "pos" to match parts of speech.
Legal values for item are any word, word lemma, or part of speech code (see CHAT manual or the CQL tab on TalkBankDB (https://talkbank.org/DB) for legal part-of-speech codes).
Legal values for freq are "once", "onePlus", and "zeroPlus".}

\item{corpusName}{Name of corpus to query.  For example, to search within the childes corpus, corpus="childes".  Note this is a character string value (not a list).  Legal values are 'aphasia', 'asd', 'biling', 'ca', 'childes', 'class', 'dementia', 'fluency', 'homebank', 'phon', 'rhd', 'samtale', 'slabank', and 'tbi'.}

\item{corpora}{Name of corpus/corporas to query.  This is a path starting with the corpus name followed by subfolder names leading to a folder for which all transcripts beneath it will be queried.  For example, to query all transripts in the MacWhinney and Brown corpus: corpora = list(list('childes', 'Eng-NA', 'MacWhinney'), list('childes', 'Eng-NA', 'Brown')).  Legal values can be found by searching the TalkBank browser: https://sla.talkbank.org/TBB.}

\item{lang}{Query by language For example, to get transcripts that contain both English and Spanish: lang=list("eng", "spa"). Legal values: 3-letter language codes based on the ISO 639-3 standard.}

\item{media}{Query by media type.  For example, to get transcripts with an associated video recording: media=list("video").  Legal values: "audio" or "video".}

\item{age}{Query by participant month age range.  For example, to get transcripts with target participants who are either 3-12 or 14-18 months old: age=list(list(from="3", to="12"), list(from="14", to="18")).  Legal values: integer month ages.}

\item{gender}{Query by participant gender. For example, to get transcripts with female target participants: gender=list("female").  Legal values: "female" or "male".}

\item{designType}{Query by design type.  For example, to get transcripts from a longitudinal study: designType=list("long")  Legal values are "long" for longitudinal studies, "cross" for cross-sectional studies.}

\item{activityType}{Query by activity type.  For example, to get transcripts where the target particpant is engaged in toy play: activityType=list("toyplay").  See the CHAT manual for legal values.}

\item{groupType}{Query by group type.   For example, to get transcripts where the target particpant is hearing limited: groupType=list("HL").  See the CHAT manual for legal values.}

\item{auth}{Boolean to determine if user should be prompted to authenticate in order to access protected collections.}
}
\description{
Queryting by "CQL" (Corpus Query Language) lets us search for patterns in the selected transcripts. We construct a CQL query by specifying a search pattern of words, lemmas, and parts of speech.
}
\examples{
getCQL(cqlArr=list(list(type="lemma", item="my", freq="once"),
                   list(type="lemma", item="ball", freq="once")),
       corpusName = 'childes',
       corpora = c('childes', 'Eng-NA', 'MacWhinney'))
}
